stages:
  - build
  - test
  - build_prod
  - release

cache:
  paths:
    - vendor/

build:
  stage: build
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  only:
    refs:
      - master
      - feature/upgrade
  script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker build -t $CI_REGISTRY_IMAGE/app/dev:latest -f Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/app/dev:latest

test:
  stage: test
  image: $CI_REGISTRY_IMAGE/app/dev:latest
  only:
    refs:
      - develop
      - feature/upgrade
  before_script:
    - composer install --prefer-dist --optimize-autoloader --classmap-authoritative --no-interaction --no-ansi
  script:
    - bin/phpunit --testdox --coverage-text --colors=never
    - vendor/bin/psalm --show-info=false --long-progress --stats

build_prod:
  stage: build_prod
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  only:
    refs:
      - master
      - feature/upgrade
  script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker build -t $CI_REGISTRY_IMAGE/app/prod:${CI_COMMIT_SHORT_SHA} -f selectel.Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/app/prod:${CI_COMMIT_SHORT_SHA}

deploy:
  image:
    name: lwolf/helm-kubectl-docker
  stage: release
  only:
    refs:
      - master
      - feature/upgrade
  variables:
    WORKING_IMAGE: $CI_REGISTRY_IMAGE/app/prod:${CI_COMMIT_SHORT_SHA}
  script:
    - kubectl set image deployment/files-deployment
      composer=${WORKING_IMAGE}
      files-mode=${WORKING_IMAGE}
      files-app=${WORKING_IMAGE} --kubeconfig ${KUBECONFIG_SELECTEL} --record
