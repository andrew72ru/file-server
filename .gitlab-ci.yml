stages:
  - build
  - test
  - build_prod

cache:
  paths:
    - vendor/

build:
  stage: build
  image: docker:git
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay
  only:
    refs:
      - master
  before_script:
    - echo '192.168.88.240    git.crtweb.ru' >> /etc/hosts
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" $CI_REGISTRY --password-stdin
  script:
    - docker build -t $CI_REGISTRY_IMAGE/app/dev:latest -f Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/app/dev:latest

test:
  stage: test
  image: $CI_REGISTRY_IMAGE/app/dev:latest
  only:
    refs:
      - master
  before_script:
    - composer install --prefer-dist --optimize-autoloader --classmap-authoritative --no-interaction --no-ansi
  script:
    - bin/phpunit --testdox --coverage-text --colors=never
    - vendor/bin/psalm --show-info=false --long-progress --stats

build_prod:
  stage: build_prod
  image: docker:git
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay
  only:
    refs:
      - master
  before_script:
    - echo '192.168.88.240    git.crtweb.ru' >> /etc/hosts
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" $CI_REGISTRY --password-stdin
  script:
    - docker build --build-arg CI_REGISTRY_IMAGE=${CI_REGISTRY_IMAGE}/app/dev -t $CI_REGISTRY_IMAGE/app/prod:latest -f production.Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/app/prod:latest
